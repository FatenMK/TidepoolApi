openapi: 3.0.0
info:
  title: Clinic service
  version: '1.0'
  description: 'Web service that stores information about clinics, clinicians and their patients'
  contact:
    name: Tidepool
    url: 'https://www.tidepool.org'
    email: support@tidepool.org
servers:
  - url: 'http://localhost:8080'
    description: local development
  - url: 'https://dev1.dev.tidepool.org'
    description: dev1
  - url: 'https://qa1.development.tidepool.org'
    description: qa1
  - url: 'https://qa2.development.tidepool.org'
    description: qa2
  - url: 'https://external.integration.tidepool.org'
    description: integration
  - url: 'https://api.tidepool.org'
    description: production
paths:
  /v1/clinics:
    get:
      summary: List Clinics
      tags:
        - clinic
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Clinics'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      operationId: ListClinics
      description: Retrieve the list of clinics
      parameters:
        - schema:
            type: integer
          in: query
          name: limit
          description: ''
        - schema:
            type: integer
          in: query
          name: offset
        - schema:
            type: string
          in: query
          name: sort
        - schema:
            type: string
          in: query
          name: clinicianId
        - schema:
            type: string
          in: query
          name: patientId
        - schema:
            type: string
          in: query
          name: email
      x-roles:
        - TIDEPOOL_ADMIN
        - CLINIC_ADMIN
        - CLINIC_CLINICIAN
    parameters: []
    post:
      summary: Create Clinic
      operationId: CreateClinic
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Clinic'
            application/xml:
              schema:
                type: object
                properties: {}
        '400':
          description: Bad Request
        '403':
          description: Forbidden
        '500':
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Clinic'
      description: Create a new clinic
      x-roles: []
      tags:
        - clinic
      parameters: []
  '/v1/clinics/{clinicId}':
    parameters:
      - schema:
          type: string
        name: clinicId
        in: path
        required: true
    get:
      summary: Get Clinic
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Clinic'
          links:
            get-clinicians:
              operationId: get-clinics-clinicid-clinicians
              parameters:
                clinicid: $request.query.clinicid
        '400':
          description: Bad Request
        '403':
          description: Forbidden
        '500':
          description: Internal Server Error
      operationId: GetClinic
      description: Retrieve a clinic by id
      x-roles:
        - TIDEPOOL_ADMIN
        - CLINIC_ADMIN
        - CLINIC_CLINICIAN
      parameters: []
    put:
      summary: Update Clinic
      operationId: UpdateClinic
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Clinic'
        '400':
          description: Bad Request
        '403':
          description: Forbidden
        '500':
          description: Internal Server Error
      description: Update an existing clinic
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Clinic'
          application/xml:
            schema:
              type: object
              properties: {}
        description: ''
      security:
        - sessionToken: []
      x-roles:
        - TIDEPOOL_ADMIN
        - CLINIC_ADMIN
      tags: []
  '/v1/clinics/{clinicId}/clinicians':
    parameters:
      - schema:
          type: string
        name: clinicId
        in: path
        required: true
    get:
      summary: List Clinicians
      tags:
        - clinic
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Clinicians'
      operationId: ListClinicians
      description: 'Retrieve the list of all clinic members. '
      parameters:
        - schema:
            type: string
          in: query
          name: search
          description: Full text search query
        - schema:
            type: integer
          in: query
          name: offset
        - schema:
            type: integer
          in: query
          name: limit
        - schema:
            type: string
          in: query
          name: email
    post:
      summary: Create Clinician
      operationId: CreateClinician
      responses:
        '200':
          description: OK
      description: Internal endpoint to create a new clinician
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Clinician'
      tags:
        - clinic
  '/v1/clinics/{clinicId}/patients':
    parameters:
      - schema:
          type: string
        name: clinicId
        in: path
        required: true
    get:
      summary: List Patients
      tags:
        - clinic
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Patients'
      operationId: ListPatients
      parameters:
        - schema:
            type: string
          in: query
          name: search
          description: 'Full text search query that matches patient''s name, email and mrn'
        - schema:
            type: integer
            minimum: 0
          in: query
          name: offset
        - schema:
            type: integer
            minimum: 1
            default: 10
          in: query
          name: limit
      description: Retrieve a list of patients of a clinic
    post:
      summary: Create Patient Account
      operationId: CreatePatientAccount
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Patient'
      description: Create a custodial account for a patient
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Patient'
      tags:
        - clinic
  '/v1/clinics/{clinicId}/clinicians/{clinicianId}':
    parameters:
      - schema:
          type: string
        name: clinicId
        in: path
        required: true
      - schema:
          type: string
        name: clinicianId
        in: path
        required: true
    get:
      summary: Get Clinician
      tags:
        - clinic
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Clinician'
      operationId: GetClinician
      description: Retrieve a member of clinic given their user id
    put:
      summary: Update Clinician
      operationId: UpdateClinician
      responses:
        '200':
          description: OK
      description: Update existing clinician
      tags:
        - clinic
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./clinic/models/clinician.v1.yaml
    delete:
      summary: Delete Clinician
      operationId: DeleteClinician
      responses:
        '200':
          description: OK
      description: Removes a clinician from a clinic
      tags:
        - clinic
  '/v1/clinics/{clinicId}/patients/{patientId}':
    parameters:
      - schema:
          type: string
        name: clinicId
        in: path
        required: true
      - schema:
          type: string
        name: patientId
        in: path
        required: true
    get:
      summary: Get Patient
      tags:
        - clinic
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Patient'
      operationId: GetPatient
      description: Retrieve a patient of clinic given their user id
    post:
      summary: Create Patient from Existing User
      operationId: CreatePatientFromUser
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Patient'
      description: Internal endpoint for creating a patient from an existing user
      tags:
        - clinic
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePatient'
    put:
      summary: Update Patient
      operationId: UpdatePatient
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Patient'
      description: Update existing patient of a clinic
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Patient'
      tags:
        - clinic
  '/v1/clinics/{clinicId}/invites/clinicians':
    parameters:
      - schema:
          type: string
        name: clinicId
        in: path
        required: true
    post:
      summary: Invite Clinician
      operationId: InviteClinician
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./clinic/models/clinician.v1.yaml
      description: Send an invite to clinician's email address to join a clinic.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InviteClinician'
      tags:
        - confirmation
  '/v1/clinics/{clinicId}/invites/clinicians/{inviteId}':
    parameters:
      - schema:
          type: string
        name: clinicId
        in: path
        required: true
      - schema:
          type: string
        name: inviteId
        in: path
        required: true
    patch:
      summary: ''
      operationId: ResendInvite
      responses:
        '200':
          description: OK
      description: Resend invite to the email address of the clinician.
      tags:
        - confirmation
    delete:
      summary: Delete Invite
      operationId: DeleteInvite
      responses:
        '200':
          description: OK
      description: Deletes unaccepted invite
      tags:
        - confirmation
  '/v1/clinics/{clinicId}/invites/clinicians/{inviteId}/clinician':
    parameters:
      - schema:
          type: string
        name: clinicId
        in: path
        required: true
      - schema:
          type: string
        name: inviteId
        in: path
        required: true
    patch:
      summary: Associate Clinician to User
      operationId: AssociateClinicianToUser
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Clinician'
      description: Internal endpoint to associate a clinician to a user.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssociateClinicianToUser'
      tags:
        - clinic
    delete:
      summary: Delete Invited Clinician
      operationId: DeleteInvitedClinician
      responses:
        '200':
          description: OK
      description: Internal endpoint to delete an invited clinician object
      tags:
        - clinic
    get:
      summary: Get Invited Clinician
      operationId: GetInvitedClinician
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Clinician'
      description: Internal endpoint to retrieve invited clinician.
      tags:
        - clinic
  '/v1/clinics/{clinicId}/invites/patients':
    parameters:
      - schema:
          type: string
        name: clinicId
        in: path
        required: true
    get:
      summary: Get Patient Invites
      tags:
        - confirmation
      responses:
        '200':
          description: OK
      operationId: GetPatientInvites
      description: Retrieve the list of all pending invites from users who would like to share their accounts with the clinic and become patients.
  '/v1/clinics/{clinicId}/invites/patients/{inviteId}':
    parameters:
      - schema:
          type: string
        name: clinicId
        in: path
        required: true
      - schema:
          type: string
        name: inviteId
        in: path
        required: true
    put:
      summary: Accept Patient Invitation
      operationId: AcceptPatientInvitation
      responses:
        '200':
          description: OK
      description: Accept a pending invite from a user who would like to share their account with the clinic and become a patient.
      tags:
        - confirmation
  '/v1/clinics/{clinicId}/patients/{patientId}/permissions':
    parameters:
      - schema:
          type: string
        name: clinicId
        in: path
        required: true
      - schema:
          type: string
        name: patientId
        in: path
        required: true
    put:
      summary: Update Patient Permissions
      operationId: UpdatePatientPermissions
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatientPermissions'
      description: Update permissions that a clinic has over a patient account
      tags:
        - clinic
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatientPermissions'
  '/v1/patients/{patientId}/clinics':
    parameters:
      - schema:
          type: string
        name: patientId
        in: path
        required: true
    get:
      summary: Get Patient Clinic Relatipnships
      tags:
        - clinic
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatientClinicRelationships'
      operationId: GetPatientClinicRelationships
      description: Get all clinics a patient is a member of
      parameters:
        - schema:
            type: integer
          in: query
          name: offset
        - schema:
            type: integer
          in: query
          name: limit
  '/v1/clinicians/{userId}/invites':
    parameters:
      - schema:
          type: string
        name: userId
        in: path
        required: true
    get:
      summary: List Clinician Invites
      tags:
        - confirmation
      responses:
        '200':
          description: OK
      operationId: ListClinicianInvites
      description: Retrieve a list of the outstanding invites to join a clinic
  '/v1/clinicians/{userId}/invites/{inviteId}':
    parameters:
      - schema:
          type: string
        name: userId
        in: path
        required: true
      - schema:
          type: string
        name: inviteId
        in: path
        required: true
    delete:
      summary: Dismiss Clinician Invite
      operationId: DismissClinicianInvite
      responses:
        '200':
          description: OK
      tags:
        - confirmation
      description: Dismisses an invite sent from a clinic to clinician
    put:
      summary: Accept Clinician Invite
      operationId: AcceptClinicianInvite
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Clinician'
      description: Accept an invite to join a clinic as clinician. The clinician will be associated to the currently authenticated user if the email in their profile matches the email of the invite.
      tags:
        - confirmation
components:
  schemas:
    Error:
      $ref: ./common/models/error.v1.yaml
    Clinic:
      $ref: ./clinic/models/clinic.v1.yaml
    Clinics:
      type: array
      items:
        $ref: '#/components/schemas/Clinic'
    Clinician:
      $ref: ./clinic/models/clinician.v1.yaml
    Clinicians:
      type: array
      items:
        $ref: '#/components/schemas/Clinician'
    Patient:
      $ref: ./clinic/models/patient.v1.yaml
    Patients:
      type: array
      items:
        $ref: '#/components/schemas/Patient'
    InviteClinician:
      $ref: ./clinic/models/inviteclinician.v1.yaml
    UserId:
      $ref: ./common/models/tidepooluserid.v1.yaml
    ClinicianRoles:
      $ref: ./clinic/models/clinicianroles.v1.yaml
    PhoneNumber:
      $ref: ./clinic/models/phonenumber.v1.yaml
    PatientPermissions:
      $ref: ./clinic/models/patientpermissions.v1.yaml
    Id:
      $ref: ./common/models/objectid.v1.yaml
    PatientClinicRelationship:
      title: PatientClinicRelationship
      type: object
      properties:
        patient:
          $ref: '#/components/schemas/Patient'
        clinic:
          $ref: '#/components/schemas/Clinic'
      required:
        - patient
        - clinic
    PatientClinicRelationships:
      title: PatientClinicRelationships
      type: array
      items:
        $ref: '#/components/schemas/PatientClinicRelationship'
    CreatePatient:
      title: Create Patient
      type: object
      properties:
        permissions:
          $ref: ./clinic/models/patientpermissions.v1.yaml
    AssociateClinicianToUser:
      title: Associate Clinician
      type: object
      properties:
        userId:
          type: string
      required:
        - userId
  securitySchemes:
    sessionToken:
      name: x-tidepool-session-token
      type: apiKey
      in: header
      description: ''
  headers:
    x-tidepool-session-token:
      schema:
        $ref: ./common/models/tidepoolsessiontoken.v1.yaml
      description: A Tidepool session token
  parameters:
    userId:
      name: userId
      in: path
      schema:
        $ref: '#/components/schemas/UserId'
      required: true
tags:
  - name: auth
    description: Tidepool Authentication
  - name: data
    description: Tidepool Diabetes Data
  - name: export
    description: Tidepool Data Export
  - name: clinic
    description: Tidepool Clinic
  - name: invite
  - name: confirmation
security:
  - sessionToken: []

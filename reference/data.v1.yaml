openapi: 3.0.0
info:
  title: Data Service API (preliminary)
  version: '1.0'
  termsOfService: https://developer.tidepool.org/terms-of-use/
  contact:
    name: API Support
    url: https://support.tidepool.org/
    email: support@tidepool.org
  license:
    name: BSD-2-Clause
    url: https://github.com/tidepool-org/platform/blob/master/LICENSE
  description: Data Service manages diabetes data in Tidepool Platform.
servers:
  - url: 'http://localhost:8080'
    description: local development
  - url: 'https://dev1.dev.tidepool.org'
    description: dev1
  - url: 'https://qa1.development.tidepool.org'
    description: qa1
  - url: 'https://qa2.development.tidepool.org'
    description: qa2
  - url: 'https://external.integration.tidepool.org'
    description: integration
  - url: 'https://api.tidepool.org'
    description: production
paths:
  '/v1/datasets/{dataSetId}/data':
    post:
      tags:
        - data
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataArray'
      summary: Upload Data to Data Set
      operationId: UploadData
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Data'
        x-examples:
          application/json:
            - time: 2017-02-05T13:26:51.000Z
              timezoneOffset: 660
              clockDriftOffset: 0
              conversionOffset: 0
              deviceTime: 2017-02-06T00:26:51
              deviceId: MMT-1711:12345678
              type: cbg
              value: 119
              units: mg/dL
              payload:
                interstitialSignal: 24.98
            - time: 2017-02-05T13:31:51.000Z
              timezoneOffset: 660
              clockDriftOffset: 0
              conversionOffset: 0
              deviceTime: 2017-02-06T00:31:51
              deviceId: MMT-1711:12345678
              type: cbg
              value: 120
              units: mg/dL
              payload:
                interstitialSignal: 25.22
      description: Import JSON data to a user's data set
    parameters:
      - name: dataSetId
        in: path
        required: true
        schema:
          type: string
  '/v1/datasets/{dataSetId}':
    delete:
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties: {}
      summary: Delete Data Set
      operationId: DeleteDataset
      tags:
        - data
      security:
        - sessionToken: []
      description: Deletes entire dataset described by the dataSetId
    parameters:
      - name: dataSetId
        in: path
        required: true
        schema:
          type: string
    put:
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties: {}
      summary: Update Data Set
      operationId: UpdateDataset
      tags:
        - data
      requestBody:
        content:
          application/json:
            schema:
              type: object
      security:
        - sessionToken: []
      description: Update data set
  '/v1/users/{userId}/datasets':
    get:
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/DataSet'
      summary: Get Data Sets for User
      security:
        - sessionToken: []
      operationId: GetDataset
      tags:
        - data
      description: Gets data sets for a user account specified by the userId
    parameters:
      - $ref: ./common.oas2.yml#/components/parameters/tp-userid-param
    post:
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataSet'
              examples:
                response:
                  value:
                    data:
                      createdTime: 2017-02-06T02:37:46Z
                      createdUserId: 
                      type: upload
                      uploadId: 
                    meta:
                      trace:
                        request: ' '
      summary: Create Data Set for User
      operationId: CreateDataset
      tags:
        - data
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataSet'
        x-examples:
          application/json:
            type: upload
            client:
              name: com.devicecorp.tidepooluploader
              version: 0.100.0
            dataSetType: normal
            deduplicator:
              name: org.tidepool.deduplicator.device.deactivate.hash
            deviceManufacturers:
              - DeviceCorp
            deviceModel: Devicey McDeviceface
            deviceSerialNumber: B97B6D59
            deviceTags:
              - bgm
              - cgm
              - insulin-pump
            timeProcessing: none
            timezone: Europe/London
            clockDriftOffset: 0
            conversionOffset: 0
            deviceId: DevId0987654321
            deviceTime: 2016-06-27T18:09:55
            time: 2016-06-28T01:09:55.132Z
            timezoneOffset: -420
      security:
        - sessionToken: []
      description: Create data set for user
  /dataservices/v1/time:
    get:
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: ./common.oas2.yml#/definitions/StatusAndData
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          time:
                            type: string
                            format: date-time
      summary: Get server time
      operationId: ServerTime
      tags:
        - data
      description: Get server time
  '/v1/users/{userId}/data':
    delete:
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties: {}
      summary: Delete all data for User
      tags:
        - data
      operationId: DeleteUserData
      security:
        - sessionToken: []
      description: Delete all data for user
    parameters:
      - $ref: ./common.oas2.yml#/components/parameters/tp-userid-param
      - $ref: ./common.oas2.yml#/components/parameters/tidepool-session-token
  '/v1/data_sets/{dataSetId}/data':
    delete:
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties: {}
      summary: Delete data from Data Set
      operationId: DeleteDatasetData
      tags:
        - data
      security:
        - sessionToken: []
      description: Delete data from data set
    parameters:
      - name: dataSetId
        in: path
        required: true
        schema:
          type: string
  /dataservices/status:
    get:
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                allOf:
                  - $ref: ./common.oas2.yml#/definitions/StatusAndData
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          Version:
                            type: string
                          Environment:
                            type: string
                          DataStore:
                            type: object
                            properties:
                              State:
                                type: string
                              BuildInfo:
                                type: object
                                properties:
                                  Version:
                                    type: string
                                  VersionArray:
                                    type: array
                                    items:
                                      allOf:
                                        - description: Major version
                                        - description: Minor version
                                        - description: Patch version
                                        - description: Tag version
                                      type: integer
                                  GitVersion:
                                    type: string
                                  OpenSSLVersion:
                                    type: string
                                  SysInfo:
                                    type: string
                                  Bits:
                                    type: integer
                                  Debug:
                                    type: boolean
                                  MaxObjectSize:
                                    type: integer
                              LiveServers:
                                type: array
                                items:
                                  type: string
                              Mode:
                                type: integer
                              Safe:
                                type: object
                                properties:
                                  W:
                                    type: integer
                                  WMode:
                                    type: string
                                  WTimeout:
                                    type: integer
                                  FSync:
                                    type: boolean
                                  J:
                                    type: boolean
                              Ping:
                                type: string
                          Server:
                            type: object
                            properties:
                              Pid:
                                type: integer
                              UpTime:
                                type: string
                              UpTimeSec:
                                type: number
                              Time:
                                type: string
                              TimeUnix:
                                type: integer
                              StatusCodeCount:
                                type: object
                                properties:
                                  '200':
                                    type: integer
                                  '201':
                                    type: integer
                                  '400':
                                    type: integer
                                  '401':
                                    type: integer
                                  '403':
                                    type: integer
                                  '404':
                                    type: integer
                                  '500':
                                    type: integer
                              TotalCount:
                                type: integer
                              TotalResponseTime:
                                type: string
                              TotalResponseTimeSec:
                                type: number
                              AverageResponseTime:
                                type: string
                              AverageResponseTimeSec:
                                type: number
      summary: Status of the platform dataservice service
      tags:
        - data
      operationId: DataserviceStatus
      description: Status of the platform dataservice
  /data/status:
    get:
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties: {}
      summary: Status of the tide-whisperer service
      tags:
        - data
      operationId: TidewhispererStatus
      description: 'Get the status of the `tide-whisperer` service. '
  '/data/{userId}':
    get:
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataArray'
      summary: Get data for user
      security:
        - sessionToken: []
      parameters:
        - in: query
          name: uploadId
          schema:
            type: string
        - in: query
          name: deviceId
          schema:
            type: string
        - in: query
          name: type
          schema:
            type: string
        - in: query
          name: subType
          schema:
            type: string
        - in: query
          name: startDate
          schema:
            type: string
            format: date-time
        - in: query
          name: endDate
          schema:
            type: string
            format: date-time
        - in: query
          name: latest
          schema:
            type: boolean
      operationId: GetData
      tags:
        - data
      description: Get data for the specified `userId`. Can specify what data type to pull,
        start date and end date.
    parameters:
      - $ref: ./common.oas2.yml#/components/parameters/tp-userid-param
tags:
  - name: data
components:
  securitySchemes:
    sessionToken:
      type: apiKey
      name: x-tidepool-session-token
      in: header
  schemas:
    DeduplicatorDescriptor:
      type: object
      properties:
        name:
          type: string
          pattern: ^[a-zA-Z0-9](|[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])(\.[a-zA-Z0-9](|[a-zA-Z0-9-]{0,61}[a-zA-Z0-9]))+$
        version:
          type: string
          pattern: ^(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(-(0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(\.(0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*)?(\+[0-9a-zA-Z-]+(\.[0-9a-zA-Z-]+)*)?$
        hash:
          type: string
          minLength: 1
      required:
        - name
        - version
    DataSet:
      type: object
      properties:
        annotations:
          type: array
          items:
            type: object
        byUser:
          $ref: ./common.oas2.yml#/definitions/user-id
        client:
          type: object
          properties:
            name:
              type: string
            version:
              type: string
            private:
              $ref: '#/components/schemas/Metadata'
        clockDriftOffset:
          type: integer
        computerTime:
          type: string
          format: date-time
        conversionOffset:
          type: integer
        createdTime:
          type: string
          format: date-time
        createdUserId:
          $ref: ./common.oas2.yml#/definitions/user-id
        dataSetType:
          type: string
          enum:
            - continuous
            - normal
        deduplicator:
          $ref: '#/components/schemas/DeduplicatorDescriptor'
        deletedTime:
          type: string
          format: date-time
        deletedUserId:
          $ref: ./common.oas2.yml#/definitions/user-id
        deviceId:
          type: string
        deviceManufacturers:
          type: array
          items:
            type: string
        deviceModel:
          type: string
        deviceSerialNumber:
          type: string
        deviceTags:
          type: array
          items:
            anyOf:
              - enum:
                  - bgm
                  - cgm
                  - insulin-pump
            type: string
        deviceTime:
          type: string
          format: date-time
        guid:
          type: string
        id:
          type: string
        modifiedTime:
          type: string
          format: date-time
        modifiedUserId:
          $ref: ./common.oas2.yml#/definitions/user-id
        payload:
          $ref: ./common.oas2.yml#/definitions/Payload
        source:
          type: string
        time:
          type: string
          format: date-time
        timeProcessing:
          type: string
          enum:
            - across-the-board-timezone
            - none
            - utc-bootstrapping
        timezone:
          type: string
        timezoneOffset:
          type: string
        type:
          type: string
          enum:
            - upload
        uploadId:
          type: string
        version:
          type: string
    Upload:
      allOf:
        - $ref: '#/components/schemas/Base'
        - type: object
          properties:
            byUser:
              $ref: ./common.oas2.yml#/definitions/user-id
            client:
              type: object
              properties:
                name:
                  type: string
                  pattern: ^[a-zA-Z0-9](|[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])(\.[a-zA-Z0-9](|[a-zA-Z0-9-]{0,61}[a-zA-Z0-9]))+$
                version:
                  type: string
                  pattern: ^(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(-(0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(\.(0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*)?(\+[0-9a-zA-Z-]+(\.[0-9a-zA-Z-]+)*)?$
                private:
                  $ref: '#/components/schemas/Metadata'
            computerTime:
              type: string
              format: time
              description: >-
                An ISO 8601 formatted timestamp without any timezone offset
                information.


                The `computerTime` field encodes the *local* time at upload with no timezone offset information since we are storing `timezone` separately. We store this field in order to be able to audit and/or detect the correspondence between the user's browser time and the timezone they selected at the time of upload. If the user selected the timezone that was actually in effect for their browser at the time of upload, then applying the stored `timezone` to the UTC Zulu `time` field will match `computerTime`. If, on the other hand, the user selected a *different* timezone from that effective in their browser at the time of upload, applying the `timezone` to `time` will *not* match `computerTime`.


                There are some use cases when it is perfectly justified to select a timezone that does *not* reflect the browser's current timezone. For example, some insulin pump users do not change the time on their devices when traveling for short periods of time across many timezones, but when uploading a device a user should always choose the timezone that aligns with the most recent data on the device and thus that will *not* match the local browser timezone.
            dataSetType:
              type: string
              enum:
                - continuous
                - normal
            deviceManufacturers:
              type: array
              description: >-
                An array of string tags indicating the manufacturer(s) of the
                device.


                In order to avoid confusion resulting from referring to a single manufacturer with more than one name—for example, using both 'Minimed' and 'Medtronic' interchangeably—we restrict the set of strings used to refer to manufacturers to the set listed above and enforce *exact* string matches (including casing).


                `deviceManufacturers` is an array of one or more string 'tags' because there are devices resulting from a collaboration between more than one manufacturer, such as the Tandem G4 insulin pump with CGM integration (a collaboration between `Tandem` and `Dexcom`).
              items:
                type: string
            deviceModel:
              type: string
              description: >-
                A string identifying the model of the device.


                The `deviceModel` is a non-empty string that encodes the model of device. We endeavor to match each manufacturer's standard for how they represent model name in terms of casing, whether parts of the name are represented as one word or two, etc.
            deviceSerialNumber:
              type: string
              description: >-
                A string encoding the device's serial number.


                The `deviceSerialNumber` is a string that encodes the serial number of the device. Note that even if a manufacturer only uses digits in its serial numbers, the SN should be stored as a string regardless.


                Uniquely of string fields in the Tidepool device data models, `deviceSerialNumber` *may* be an empty string. This is essentially a compromise: having the device serial number is extremely important (especially for e.g., clinical studies) but in 2016 we came across our first case where we *cannot* recover the serial number of the device that generated the data: Dexcom G5 data uploaded to Tidepool through Apple iOS's HealthKit integration.
            deviceTags:
              type: array
              description: >-
                An array of string tags indicating the function(s) of the
                device.


                The `deviceTags` array should be fairly self-explanatory as an array of tags indicating the function(s) of a particular device. For example, the Insulet OmniPod insulin delivery system has the tags `bgm` and `insulin-pump` since the PDM is both an insulin pump controller and includes a built-in blood glucose monitor.
              items:
                anyOf:
                  - enum:
                      - bgm
                      - cgm
                      - insulin-pump
                type: string
            timeProcessing:
              type: string
              enum:
                - across-the-board-timezone
                - none
                - utc-bootstrapping
              description: >-
                A string indicating what variety of processing was used to
                create the `time` and related fields such as `timezoneOffset` on
                data in this upload.


                For data auditing purposes, we store a string encoding the type of algorithm used to generate the `time`, `timezoneOffset`, and other related fields from the local `deviceTime`. At present, there are only three options for this value:

                - `across-the-board-timezone` for devices (all BGMs, for example) that cannot have their `deviceTime` values ['bootstrapped' to a UTC `time` value](http://developer.tidepool.io/chrome-uploader/docs/BootstrappingToUTC.html); in such cases, we apply a single user-selected timezone to every `deviceTime` 'across the board' to generate the `time` value.

                - `utc-bootstrapping` for devices (most insulin pumps and CGMs) where we use a combination of the user-selected timezone at time of upload, the most recent timestamp on device, and the history of display time changes on the device to infer the correct `time` value for each record.

                - `none` for data sources that already include a UTC-anchored `time` value. At present, the *only* data source for which this is true is Dexcom G5 data coming through Apple's iOS HealthKit integration.
            version:
              type: string
              minLength: 5
              description: >-
                A string encoding the version of the uploading client.


                A string identifying the software version of the uploading client. For the Chrome uploader, this will be a [semver](http://semver.org/ 'semver')—for example, `1.25.2`. For other uploading clients such as Tidepool iOS applications, the format includes the namespace and semver of the app: `org.tidepool.blipnotes:1.25:2`.
            type:
              type: string
              enum:
                - upload
              description: The string `upload`.
      description: Metadata about an upload of diabetes device data to the Tidepool
        platform.
    Base:
      type: object
      title: Base (Abstract)
      properties:
        annotations:
          $ref: ./common.oas2.yml#/definitions/AnnotationArray
        archivedDatasetId:
          type: string
        archivedTime:
          type: string
          format: date-time
        associations:
          $ref: ./common.oas2.yml#/definitions/AssociationArray
        clockDriftOffset:
          type: integer
          description: '(OPTIONAL) An integer value representing milliseconds. '
        conversionOffset:
          type: integer
        createdTime:
          type: string
          format: date-time
        createdUserId:
          $ref: ./common.oas2.yml#/definitions/user-id
        deduplicator:
          $ref: '#/components/schemas/DeduplicatorDescriptor'
        deletedTime:
          type: string
          format: date-time
        deletedUserId:
          $ref: ./common.oas2.yml#/definitions/user-id
        deviceId:
          type: string
          description: A string ID. An ISO-8601 string timestamp without timezone offset
            information. Added to each event during data processing in the
            Tidepool uploader Chrome application.
        deviceTime:
          type: string
          format: date-time
          description: An ISO-8601 string timestamp without timezone offset information.
            Added to each event during data processing in the Tidepool uploader
            Chrome application.
        guid:
          type: string
          description: A string ID. Added to each event during data processing in the
            Tidepool uploader Chrome application or upon ingestion by the
            platform data ingestion service.
        history:
          $ref: '#/components/schemas/EventHistory'
        id:
          type: string
        location:
          $ref: ./common.oas2.yml#/definitions/Location
        modifiedTime:
          type: string
          format: date-time
        modifiedUserId:
          $ref: ./common.oas2.yml#/definitions/user-id
        notes:
          type: array
          items:
            type: object
        origin:
          $ref: ./common.oas2.yml#/definitions/Origin
        payload:
          $ref: ./common.oas2.yml#/definitions/Payload
        source:
          type: string
        tags:
          $ref: ./common.oas2.yml#/definitions/TagArray
        time:
          type: string
          format: date-time
          description: An ISO-8601 string timestamp. Added to each event during data
            processing in the Tidepool uploader Chrome application.
        timezone:
          type: string
        timezoneOffset:
          type: number
        type:
          type: string
          enum:
            - basal
            - bloodKetone
            - bolus
            - cbg
            - cgmSettings
            - deviceEvent
            - deviceStatus
            - food
            - insulin
            - physicalActivity
            - pumpSettings
            - reportedState
            - smbg
            - upload
            - water
            - wizard
        uploadId:
          type: string
      required:
        - type
    Basal:
      allOf:
        - $ref: '#/components/schemas/Base'
        - type: object
          properties:
            deliveryType:
              type: string
              enum:
                - automated
                - scheduled
                - suspend
                - temp
            type:
              enum:
                - basal
              type: string
          required:
            - deliveryType
            - type
      description: This is an abstract type used to define BasalAutomated, BasalScheduled,
        BasalSuspend and BasalTemporary
      title: Basal (Abstract)
    BasalAutomated:
      allOf:
        - $ref: '#/components/schemas/Basal'
        - type: object
          properties:
            deliveryType:
              type: string
              enum:
                - automated
            duration:
              type: integer
              minimum: 0
              maximum: 604800000
              description: An integer value representing a duration of time in milliseconds.
            expectedDuration:
              type: integer
              minimum: 0
              maximum: 604800000
              description: >-
                An integer value representing an original programmed duration of
                time in milliseconds, copied from the duration field on
                ingestion when a following event has resulted in truncation of
                the original programmed duration.


                `expectedDuration` cannot be less than the value of `duration`
            insulinFormulation:
              $ref: '#/components/schemas/InsulinFormulation'
            rate:
              type: number
              format: double
              minimum: 0
              maximum: 100
              description: A floating point number >= 0 representing the amount of insulin
                delivered in units per hour.
            scheduleName:
              type: string
              description: The name of the basal schedule.
          required:
            - deliveryType
            - duration
            - rate
      description: An automated basal delivery event
    InsulinFormulation:
      oneOf:
        - properties:
            compounds:
              $ref: '#/components/schemas/InsulinCompoundArray'
            name:
              type: string
              minLength: 1
              maxLength: 100
        - properties:
            simple:
              $ref: '#/components/schemas/InsulinSimple'
            name:
              type: string
              minLength: 1
              maxLength: 100
      type: object
    InsulinSimple:
      type: object
      properties:
        actingType:
          type: string
          enum:
            - intermediate
            - long
            - rapid
            - short
        brand:
          type: string
          minLength: 1
          maxLength: 100
        concentration:
          $ref: '#/components/schemas/InsulinConcentration'
      required:
        - actingType
    InsulinConcentration:
      type: object
      properties:
        units:
          type: string
          enum:
            - Units/mL
        value:
          type: number
          format: double
          minimum: 0
          maximum: 10000
      required:
        - units
        - value
    InsulinCompound:
      type: object
      properties:
        amount:
          type: number
          format: double
          minimum: 0
        formulation:
          $ref: '#/components/schemas/InsulinFormulation'
      required:
        - amount
    InsulinCompoundArray:
      type: array
      minItems: 1
      maxItems: 100
      items:
        $ref: '#/components/schemas/InsulinCompound'
    Data:
      oneOf:
        - $ref: '#/components/schemas/BasalAutomated'
        - $ref: '#/components/schemas/BasalScheduled'
        - $ref: '#/components/schemas/BasalSuspend'
        - $ref: '#/components/schemas/BasalTemporary'
        - $ref: '#/components/schemas/BloodKetone'
        - $ref: '#/components/schemas/BolusCombination'
        - $ref: '#/components/schemas/BolusExtended'
        - $ref: '#/components/schemas/BolusNormal'
        - $ref: '#/components/schemas/Calculator'
        - $ref: '#/components/schemas/CgmSettings'
        - $ref: '#/components/schemas/ContinuousGlucose'
        - $ref: '#/components/schemas/DeviceAlarm'
        - $ref: '#/components/schemas/DeviceCalibration'
        - $ref: '#/components/schemas/DeviceDeliveryStatus'
        - $ref: '#/components/schemas/DevicePrimeEvent'
        - $ref: '#/components/schemas/DeviceReservoirChange'
        - $ref: '#/components/schemas/DeviceSettingsChange'
        - $ref: '#/components/schemas/DosingDecision'
        - $ref: '#/components/schemas/DeviceTimeChange'
        - $ref: '#/components/schemas/Food'
        - $ref: '#/components/schemas/Insulin'
        - $ref: '#/components/schemas/PhysicalActivity'
        - $ref: '#/components/schemas/ReportedState'
        - $ref: '#/components/schemas/SelfMonitoredGlucose'
        - $ref: '#/components/schemas/Upload'
        - $ref: '#/components/schemas/Water'
    DataArray:
      type: array
      items:
        $ref: '#/components/schemas/Data'
    Metadata:
      type: object
      properties: {}
    MetadataArray:
      type: array
      items:
        $ref: '#/components/schemas/Metadata'
    BasalSuppressedAutomated:
      type: object
      properties:
        annotations:
          $ref: '#/components/schemas/MetadataArray'
        deliveryType:
          type: string
          enum:
            - automated
        insulinFormulation:
          $ref: '#/components/schemas/InsulinFormulation'
        rate:
          type: number
          format: double
          minimum: 0
          maximum: 100
          description: A floating point number >= 0 representing the amount of insulin
            delivered in units per hour.
        scheduleName:
          type: string
          description: The name of the basal schedule.
        type:
          type: string
          enum:
            - basal
    BasalSuppressedScheduled:
      type: object
      properties:
        annotations:
          $ref: '#/components/schemas/MetadataArray'
        deliveryType:
          type: string
          enum:
            - scheduled
        insulinFormulation:
          $ref: '#/components/schemas/InsulinFormulation'
        rate:
          type: number
          format: double
          minimum: 0
          maximum: 100
          description: A floating point number >= 0 representing the amount of insulin
            delivered in units per hour.
        scheduleName:
          type: string
          description: The name of the basal schedule.
        type:
          type: string
          enum:
            - basal
    BasalScheduled:
      allOf:
        - $ref: '#/components/schemas/Basal'
        - type: object
          properties:
            duration:
              type: integer
              minimum: 0
              maximum: 604800000
              description: An integer value representing a duration of time in milliseconds.
            expectedDuration:
              type: integer
              minimum: 0
              maximum: 604800000
              description: >-
                An integer value representing an original programmed duration of
                time in milliseconds, copied from the duration field on
                ingestion when a following event has resulted in truncation of
                the original programmed duration.


                `expectedDuration` cannot be less than the value of `duration`
            insulinFormulation:
              $ref: '#/components/schemas/InsulinFormulation'
            rate:
              type: number
              format: double
              minimum: 0
              maximum: 100
              description: A floating point number >= 0 representing the amount of insulin
                delivered in units per hour.
            scheduleName:
              type: string
              description: The name of the basal schedule.
      description: A scheduled basal delivery event
    BasalSuppressedTemporary:
      type: object
      properties:
        annotations:
          $ref: '#/components/schemas/MetadataArray'
        deliveryType:
          type: string
          enum:
            - temporary
        insulinFormulation:
          $ref: '#/components/schemas/InsulinFormulation'
        percent:
          type: number
          format: float
          minimum: 0
          maximum: 10
        rate:
          type: number
          format: double
          minimum: 0
          maximum: 100
          description: A floating point number >= 0 representing the amount of insulin
            delivered in units per hour.
        suppressed:
          $ref: '#/components/schemas/BasalSuppressed'
        type:
          type: string
          enum:
            - basal
    BasalTemporary:
      allOf:
        - $ref: '#/components/schemas/Basal'
        - type: object
          properties:
            duration:
              type: integer
              minimum: 0
              maximum: 604800000
              description: An integer value representing a duration of time in milliseconds.
            expectedDuration:
              type: integer
              minimum: 0
              maximum: 604800000
              description: >-
                An integer value representing an original programmed duration of
                time in milliseconds, copied from the duration field on
                ingestion when a following event has resulted in truncation of
                the original programmed duration.


                `expectedDuration` cannot be less than the value of `duration`
            insulinFormulation:
              $ref: '#/components/schemas/InsulinFormulation'
            percent:
              type: number
              format: float
              minimum: 0
              maximum: 10
              description: Floating point value representing a percentage, where 1.0
                represents 100%.
            rate:
              type: number
              format: double
              minimum: 0
              maximum: 100
              description: A floating point number >= 0 representing the amount of insulin
                delivered in units per hour.
            suppressed:
              $ref: '#/components/schemas/BasalSuppressed'
      description: A temporary basal delivery event
    BasalSuppressed:
      oneOf:
        - $ref: '#/components/schemas/BasalSuppressedAutomated'
        - $ref: '#/components/schemas/BasalSuppressedScheduled'
        - $ref: '#/components/schemas/BasalSuppressedTemporary'
      title: BasalSuppressed (Abstract)
    BasalSuspend:
      allOf:
        - $ref: '#/components/schemas/Basal'
        - type: object
          properties:
            duration:
              type: integer
              minimum: 0
              maximum: 604800000
              description: An integer value representing a duration of time in milliseconds.
            expectedDuration:
              type: integer
              minimum: 0
              maximum: 604800000
              description: >-
                An integer value representing an original programmed duration of
                time in milliseconds, copied from the duration field on
                ingestion when a following event has resulted in truncation of
                the original programmed duration.


                `expectedDuration` cannot be less than the value of `duration`
            suppressed:
              $ref: '#/components/schemas/BasalSuppressed'
      description: A basal suspend event
    Blood:
      allOf:
        - $ref: '#/components/schemas/Base'
        - type: object
          properties:
            units:
              type: string
            value:
              type: number
              format: float
          required:
            - units
            - value
      title: Blood (Abstract)
    BloodKetone:
      allOf:
        - $ref: '#/components/schemas/Blood'
        - type: object
          properties:
            units:
              type: string
              enum:
                - mmol/l
                - mmol/L
            value:
              type: number
              format: float
              minimum: 10
              maximum: 0
              description: Floating point value representing a `mmol/L` value.
            type:
              type: string
              enum:
                - bloodKetone
          required:
            - units
            - value
            - type
      description: A blood ketone measurement event
    BloodGlucoseMgdl:
      allOf:
        - $ref: '#/components/schemas/Blood'
        - type: object
          properties:
            units:
              type: string
              enum:
                - mg/dl
                - mg/dL
            value:
              type: number
              format: float
              minimum: 0
              maximum: 1000
            trend:
              $ref: '#/components/schemas/Trend'
          required:
            - units
            - value
      title: BloodGlucoseMgdl (Abstract)
      description: A blood glucose value in mg/dL
    ContinuousGlucose:
      oneOf:
        - allOf:
            - $ref: '#/components/schemas/BloodGlucoseMgdl'
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - cbg
              required:
                - type
            - type: object
            - type: object
          description: A continuous glucose measurement in mg/dL
        - allOf:
            - $ref: '#/components/schemas/BloodGlucoseMmol'
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - cbg
              required:
                - type
          description: A continuous glucose measurement in mmol/L
      description: A continuous glucose measurement
    BloodGlucoseMmol:
      allOf:
        - $ref: '#/components/schemas/Blood'
        - type: object
          properties:
            units:
              type: string
              enum:
                - mmol/l
                - mmol/L
            value:
              type: number
              format: float
              minimum: 0
              maximum: 55
            trend:
              $ref: '#/components/schemas/Trend'
          required:
            - units
            - value
      title: BloodGlucoseMmol (Abstract)
      description: A blood glucose value in mmol/L
    SelfMonitoredGlucose:
      oneOf:
        - allOf:
            - $ref: '#/components/schemas/BloodGlucoseMgdl'
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - smbg
                subType:
                  type: string
                  enum:
                    - linked
                    - manual
              required:
                - type
          description: A self-monitored glucose measurement in mg/dL
        - allOf:
            - $ref: '#/components/schemas/BloodGlucoseMmol'
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - smbg
                subType:
                  type: string
                  enum:
                    - linked
                    - manual
              required:
                - type
          description: A self-monitored glucose measurement in mmol/L
      description: A self-monitored glucose measurement
    Bolus:
      allOf:
        - $ref: '#/components/schemas/Base'
        - type: object
          properties:
            insulinFormulation:
              $ref: '#/components/schemas/InsulinFormulation'
            subType:
              type: string
              enum:
                - dual/square
                - normal
                - square
            type:
              type: string
              enum:
                - bolus
          required:
            - subType
            - type
      title: Bolus (Abstract)
    BolusCombination:
      allOf:
        - $ref: '#/components/schemas/Bolus'
        - type: object
          properties:
            duration:
              type: integer
              minimum: 0
              maximum: 86400000
              description: Integer value representing milliseconds
            expectedDuration:
              type: integer
              minimum: 0
              maximum: 86400000
              description: Integer value representing milliseconds
            expectedExtended:
              type: number
              format: float
              minimum: 0
              maximum: 100
              description: Floating point value rounded to the appropriate significant
                figures for the device's precision.
            expectedNormal:
              type: number
              format: float
              minimum: 0
              maximum: 100
              description: Floating point value rounded to the appropriate significant
                figures for the device's precision.
            extended:
              type: number
              format: float
              minimum: 0
              maximum: 100
              description: Floating point value rounded to the appropriate significant
                figures for the device's precision.
            normal:
              type: number
              format: float
              minimum: 0
              maximum: 100
              description: Floating point value rounded to the appropriate significant
                figures for the device's precision.
            subType:
              type: string
              enum:
                - dual/square
          required:
            - duration
            - extended
            - normal
            - subType
      description: A combination bolus event
    BolusExtended:
      allOf:
        - $ref: '#/components/schemas/Bolus'
        - type: object
          properties:
            duration:
              type: integer
              minimum: 0
              maximum: 86400000
              description: Integer value representing milliseconds
            expectedDuration:
              type: integer
              minimum: 0
              maximum: 86400000
              description: Integer value representing milliseconds
            expectedExtended:
              type: number
              format: float
              minimum: 0
              maximum: 100
              description: Floating point value rounded to the appropriate significant
                figures for the device's precision.
            extended:
              type: number
              format: float
              minimum: 0
              maximum: 100
              description: Floating point value rounded to the appropriate significant
                figures for the device's precision.
            subType:
              type: string
              enum:
                - square
          required:
            - duration
            - extended
            - subType
      description: An extended bolus event
    BolusNormal:
      allOf:
        - $ref: '#/components/schemas/Bolus'
        - type: object
          properties:
            expectedNormal:
              type: number
              format: float
              minimum: 0
              maximum: 100
              description: Floating point value rounded to the appropriate significant
                figures for the device's precision.
            normal:
              type: number
              format: float
              minimum: 0
              maximum: 100
              description: Floating point value rounded to the appropriate significant
                figures for the device's precision.
            subType:
              type: string
              enum:
                - normal
          required:
            - normal
            - subType
      description: A normal bolus event
    BloodGlucoseTarget:
      oneOf:
        - description: If values are in `mg/dL`
          properties:
            high:
              type: number
              minimum: 0
              maximum: 1000
              description: >-
                An integer encoding the upper bound of a PWD's blood glucose
                target.


                The minimum value should be >= `low` or `target`, whichever present
            low:
              type: number
              minimum: 0
              maximum: 1000
              description: An integer encoding the lower bound of a PWD's blood glucose
                target.
            range:
              type: number
              minimum: 0
              maximum: 1000
              description: >-
                An integer encoding the allowed deviation above or below the
                PWD's target blood glucose.


                Maximum should be min(`target`, 1000 - `target`) such that `target`-`range` >= 0 and `target`+`range` <= 1000
            target:
              type: number
              minimum: 0
              maximum: 1000
              description: An integer encoding the PWD's target blood glucose as a single
                value.
        - description: If values are in `mmol/L`
          properties:
            high:
              type: number
              description: >-
                An integer encoding the upper bound of a PWD's blood glucose
                target.


                The minimum value should be >= `low` or `target`, whichever present
              minimum: 0
              maximum: 55
            low:
              type: number
              minimum: 0
              maximum: 55
              description: An integer encoding the lower bound of a PWD's blood glucose
                target.
            range:
              type: number
              minimum: 0
              maximum: 55
              description: >-
                An integer encoding the allowed deviation above or below the
                PWD's target blood glucose.


                Maximum should be min(`target`, 1000 - `target`) such that `target`-`range` >= 0 and `target`+`range` <= 1000
            target:
              type: number
              minimum: 0
              maximum: 55
              description: An integer encoding the PWD's target blood glucose as a single
                value.
      type: object
    InsulinRecommended:
      type: object
      description: An object encoding the amount of insulin calculated as a recommended
        dose to 'cover' the `bgInput` and `carbInput`, possibly taking into
        account the `insulinOnBoard`.
      properties:
        carb:
          type: number
          description: >-
            A floating point value representing units of insulin.


            Floating point value rounded to the appropriate significant figures for the device's precision.
          format: float
          minimum: 0
          maximum: 100
        correction:
          type: number
          description: >-
            A floating point value representing units of insulin.


            Floating point value rounded to the appropriate significant figures for the device's precision.
          format: float
          minimum: -100
          maximum: 100
        net:
          type: number
          description: >-
            A floating point value representing units of insulin.


            Floating point value rounded to the appropriate significant figures for the device's precision.
          format: float
          minimum: -100
          maximum: 100
    Calculator:
      allOf:
        - $ref: '#/components/schemas/Base'
        - type: object
          properties:
            bgInput:
              $ref: '#/components/schemas/BloodGlucoseValue'
            bgTarget:
              $ref: '#/components/schemas/BloodGlucoseTarget'
            bolus:
              description: The bolus event resulting from this wizard event.
              oneOf:
                - $ref: '#/components/schemas/BolusCombination'
                - $ref: '#/components/schemas/BolusExtended'
                - $ref: '#/components/schemas/BolusNormal'
            carbInput:
              type: integer
              description: An integer encoding the PWD's carbohydrate input into the bolus
                calculator.
              minimum: 0
              maximum: 1000
            insulinCarbRatio:
              type: number
              description: An integer encoding the grams of carbohydrate 'covered' by one
                unit of insulin for the PWD.
              format: double
              minimum: 0
              maximum: 250
            insulinOnBoard:
              type: number
              description: A floating point value representing units of insulin.
              format: float
              minimum: 0
              maximum: 250
            insulinSensitivity:
              $ref: '#/components/schemas/BloodGlucoseValue'
            recommended:
              $ref: '#/components/schemas/InsulinRecommended'
            type:
              type: string
              enum:
                - wizard
            units:
              type: string
            carbUnits:
              type: string
              enum:
                - grams
                - exchanges
          required:
            - type
      description: A bolus calculator event
    Amount:
      type: object
      title: Amount (Abstract)
      properties:
        units:
          type: string
        value:
          type: number
          format: double
      required:
        - units
        - value
    Water:
      oneOf:
        - allOf:
            - $ref: '#/components/schemas/Base'
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - water
              required:
                - type
            - $ref: '#/components/schemas/WaterAmountGallons'
          description: Water amount in gallons
        - allOf:
            - $ref: '#/components/schemas/Base'
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - water
              required:
                - type
            - $ref: '#/components/schemas/WaterAmountOunces'
          description: Water amount in ounces
        - allOf:
            - $ref: '#/components/schemas/Base'
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - water
              required:
                - type
            - $ref: '#/components/schemas/WaterAmountLiters'
          description: Water amount in liters
        - allOf:
            - $ref: '#/components/schemas/Base'
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - water
              required:
                - type
            - $ref: '#/components/schemas/WaterAmountMilliliters'
          description: Water amount in milliliters
    WaterAmountGallons:
      allOf:
        - $ref: '#/components/schemas/Amount'
        - type: object
          properties:
            units:
              type: string
              enum:
                - gallons
            value:
              type: number
              format: double
              minimum: 0
              maximum: 10
    WaterAmountOunces:
      allOf:
        - $ref: '#/components/schemas/Amount'
        - type: object
          properties:
            units:
              type: string
              enum:
                - ounces
            value:
              type: number
              format: double
              minimum: 0
              maximum: 1280
    WaterAmountLiters:
      allOf:
        - $ref: '#/components/schemas/Amount'
        - type: object
          properties:
            units:
              type: string
              enum:
                - liters
            value:
              type: number
              format: double
              minimum: 0
              maximum: 37.854118
          required:
            - units
            - value
    WaterAmountMilliliters:
      allOf:
        - $ref: '#/components/schemas/Amount'
        - type: object
          properties:
            units:
              type: string
              enum:
                - milliliters
            value:
              type: number
              format: double
              minimum: 0
              maximum: 37854.118
    InsulinDose:
      type: object
      description: An object representing an Inuslin Dose
      properties:
        active:
          type: number
          format: float
          minimum: 0
          maximum: 250
        correction:
          type: number
          format: float
          minimum: -250
          maximum: 250
        food:
          type: number
          format: float
          minimum: 0
          maximum: 250
        total:
          type: number
          format: float
          minimum: 0
          maximum: 250
        units:
          type: string
          enum:
            - Units
      required:
        - total
        - units
    Insulin:
      allOf:
        - $ref: '#/components/schemas/Base'
        - type: object
          properties:
            dose:
              $ref: '#/components/schemas/InsulinDose'
            formulation:
              $ref: '#/components/schemas/InsulinFormulation'
            site:
              type: string
              minLength: 0
              maxLength: 100
            type:
              type: string
              enum:
                - insulin
          required:
            - type
      description: An Insulin delivery event. Could be automated or manual.
    DeviceEvent:
      title: DeviceEvent (Abstract)
      allOf:
        - $ref: '#/components/schemas/Base'
        - type: object
          properties:
            subType:
              type: string
              enum:
                - alarm
                - calibration
                - prime
                - reservoirChange
                - sensorEvent
                - settingsChange
                - status
                - timeChange
                - transmitterEvent
            type:
              type: string
              enum:
                - deviceEvent
          required:
            - subType
            - type
    DeviceAlarm:
      allOf:
        - $ref: '#/components/schemas/DeviceEvent'
        - type: object
          properties:
            alarmType:
              type: string
              enum:
                - auto_off
                - low_insulin
                - low_power
                - no_delivery
                - no_insulin
                - no_power
                - occlusion
                - other
                - over_limit
              description: String value encoding the type of alarm, with `other` as the
                catch-all/default category.
            status:
              type: string
              description: The `id` of the status event logically connected with this event.
            subType:
              type: string
              enum:
                - alarm
          required:
            - alarmType
            - subType
      description: An alert from a diabetes device
    DeviceCalibration:
      oneOf:
        - allOf:
            - $ref: '#/components/schemas/DeviceEvent'
            - $ref: '#/components/schemas/BloodGlucoseMgdl'
            - type: object
              properties:
                subType:
                  type: string
                  enum:
                    - calibration
              required:
                - subType
          description: A blood glucose device calibration event in mg/dL
        - allOf:
            - $ref: '#/components/schemas/DeviceEvent'
            - $ref: '#/components/schemas/BloodGlucoseMmol'
            - type: object
              properties:
                subType:
                  type: string
                  enum:
                    - calibration
              required:
                - subType
          description: A blood glucose device calibration event in mmol/L
      description: A blood glucose device calibration event
    DevicePrimeEvent:
      oneOf:
        - allOf:
            - $ref: '#/components/schemas/DeviceEvent'
            - type: object
              properties:
                primeTarget:
                  type: string
                  enum:
                    - cannula
                subType:
                  type: string
                  enum:
                    - prime
                volume:
                  type: number
                  format: float
                  minimum: 0
                  maximum: 10
              required:
                - primeTarget
                - subType
          description: A cannula prime event
        - allOf:
            - $ref: '#/components/schemas/DeviceEvent'
            - type: object
              description: A tubing prime event
              properties:
                primeTarget:
                  type: string
                  enum:
                    - tubing
                subType:
                  type: string
                  enum:
                    - prime
                volume:
                  type: number
                  format: float
                  minimum: 0
                  maximum: 100
              required:
                - primeTarget
                - subType
    DeviceReservoirChange:
      allOf:
        - $ref: '#/components/schemas/DeviceEvent'
        - type: object
          properties:
            subType:
              type: string
              enum:
                - reservoirChange
            status:
              type: string
              description: The `id` of the `status` event logically connected with this
                event.
          required:
            - subType
      description: An insulin pump reservoir change
    DeviceDeliveryStatus:
      allOf:
        - $ref: '#/components/schemas/DeviceEvent'
        - type: object
          properties:
            duration:
              type: integer
              minimum: 0
            expectedDuration:
              type: integer
              minimum: 0
            reason:
              type: object
              properties:
                suspended:
                  type: string
                  enum:
                    - automatic
                    - manual
                resumed:
                  type: string
                  enum:
                    - automatic
                    - manual
            status:
              type: string
              enum:
                - resumed
                - suspended
            subType:
              type: string
              enum:
                - status
          required:
            - status
            - subType
      description: An insulin pump's insulin delivery status
    TimeChangeInfo:
      type: object
      properties:
        time:
          type: string
          format: date-time
          description: An ISO 8601 formatted timestamp _without_ any timezone offset
            information
        timeZoneName:
          type: string
          description: A string timezone name from the [IANA timezone
            database](https://www.iana.org/time-zones)
    DeviceTimeChange:
      oneOf:
        - allOf:
            - $ref: '#/components/schemas/DeviceEvent'
            - type: object
              properties:
                subType:
                  type: string
                  enum:
                    - timeChange
                change:
                  properties:
                    agent:
                      type: string
                      enum:
                        - automatic
                        - manual
                    from:
                      type: string
                      description: An ISO 8601 formatted timestamp _without_ any timezone
                        offset information
                      format: date-time
                    to:
                      type: string
                      description: An ISO 8601 formatted timestamp _without_ any timezone
                        offset information
                      format: date-time
                  required:
                    - agent
                    - from
                    - to
                  oneOf:
                    - type: string
                    - type: object
              required:
                - subType
          description: Legacy `timeChange` event
        - allOf:
            - $ref: '#/components/schemas/DeviceEvent'
            - type: object
              properties:
                subType:
                  type: string
                  enum:
                    - timeChange
                from:
                  $ref: '#/components/schemas/TimeChangeInfo'
                method:
                  type: string
                  enum:
                    - automatic
                    - manual
                to:
                  $ref: '#/components/schemas/TimeChangeInfo'
              required:
                - subType
                - method
                - to
          description: A `timeChange` event
    PumpSettings:
      allOf:
        - $ref: '#/components/schemas/Base'
        - type: object
          properties:
            activeSchedule:
              type: string
              description: A string value encoding the name of the PWD's active basal
                schedule.
            basal:
              type: object
              properties:
                rateMaximum:
                  type: object
                  properties:
                    units:
                      type: string
                      enum:
                        - Units/hour
                    value:
                      type: number
                      minimum: 0
                      maximum: 100
                  required:
                    - units
                    - value
                temporary:
                  type: object
                  properties:
                    type:
                      type: string
                      enum:
                        - off
                        - percent
                        - Units/hour
                  required:
                    - type
            basalSchedule:
              type: object
            basalSchedules:
              type: object
              description: A set of key-value pairs encoding the PWD's programmed basal
                schedules, where each key is a basal schedule name and each
                value is an array of basal schedule segment objects.
            basalSchedulesTimezoneOffset:
              type: number
              minimum: -10080
              maximum: 10080
            bgTargetPreprandial:
              $ref: '#/components/schemas/BloodGlucoseTarget'
            bgTarget:
              $ref: '#/components/schemas/BloodGlucoseTarget'
            bgTargets:
              type: object
            bgTargetsTimezoneOffset:
              type: number
              minimum: -10080
              maximum: 10080
            bolus:
              type: object
              properties:
                amountMaximum:
                  type: object
                  properties:
                    units:
                      type: string
                      enum:
                        - Units
                    value:
                      type: number
                      minimum: -10080
                      maximum: 10080
                  required:
                    - units
                    - value
                calculator:
                  type: object
                  properties:
                    enabled:
                      type: boolean
                    insulin:
                      oneOf:
                        - description: Duration in `hours`
                          properties:
                            duration:
                              type: number
                              format: float
                              minimum: 0
                              maximum: 10
                            units:
                              type: string
                              enum:
                                - hours
                          required:
                            - duration
                            - units
                        - description: Duration in `minutes`
                          properties:
                            duration:
                              type: number
                              format: float
                              minimum: 0
                              maximum: 600
                            units:
                              type: string
                              enum:
                                - minutes
                          required:
                            - duration
                            - units
                        - description: Duration in `seconds`
                          properties:
                            duration:
                              type: number
                              format: float
                              minimum: 0
                              maximum: 36000
                            units:
                              type: string
                              enum:
                                - seconds
                          required:
                            - duration
                            - units
                      type: object
                  required:
                    - enabled
                extended:
                  type: object
            carbRatio:
              type: array
              format: double
              description: An integer encoding the grams of carbohydrate 'covered' by one
                unit of insulin for the PWD.
              items:
                type: object
                properties:
                  amount:
                    type: number
                    minimum: 0
                    maximum: 250
                  start:
                    type: number
                    minimum: 0
                    maximum: 86400000
                required:
                  - amount
                  - start
            carbRatios:
              type: array
              description: A set of key-value pairs encoding the PWD's programmed carb
                ratio schedules, where each key is a schedule name and each
                value is an array of carb ratio segment objects.
              items:
                type: object
            carbRatiosTimezoneOffset:
              type: number
              minimum: -10080
              maximum: 10080
            display:
              type: object
              properties:
                bloodGlucose:
                  type: object
                  properties:
                    units:
                      type: string
                      enum:
                        - mg/dL
                        - mmol/L
                  required:
                    - units
            dosingEnabled:
              type: boolean
            insulinModel:
              type: string
              enum:
                - rapidAdult
                - rapidChild
                - fiasp
            insulinSensitivity:
              type: object
            insulinSensitivities:
              type: object
            manufacturers:
              type: array
              uniqueItems: true
              minItems: 0
              maxItems: 10
              items:
                type: string
                minLength: 1
                maxLength: 100
            model:
              type: string
              minLength: 1
              maxLength: 100
            serialNumber:
              type: string
              minLength: 1
              maxLength: 100
            suspendThreshold:
              type: object
              properties:
                units:
                  type: string
                  enum:
                    - mmol/L
                    - mmol/l
                    - mg/dl
                    - mg/dL
                value:
                  type: number
                  minimum: 0
                  maximum: 1000
              required:
                - units
                - value
            units:
              type: object
              properties:
                bg:
                  type: string
                  enum:
                    - mmol/L
                    - mmol/l
                    - mg/dL
                    - mg/dl
                  description: A string value encoding the blood glucose units exposed in
                    the user interface on this insulin pump.
                carb:
                  type: string
                  enum:
                    - exchanges
                    - grams
                  description: A string value encoding the (universal) units for
                    carbohydrate input as grams.
              required:
                - bg
                - carb
          required:
            - activeSchedule
      description: >-
        TODO: Find a way for the following to be either/or and add properties of
        all of the above (for now, set to type: object):

        - basalSchedule/basalSchedules

        - bgTarget/bgTargets

        - carbRatio/carbRatios

        - insulinSensitivity/insulinSensitivities

        - add properties of all of the above
    BasalRateStartArray:
      type: array
      description: A set of key-value pairs encoding the PWD's programmed basal schedules,
        where each key is a basal schedule name and each value is an array of
        basal schedule segment objects.
      items:
        type: object
        properties:
          rate:
            type: number
            description: A floating point number >= 0 representing the amount of insulin
              delivered in Units per hour.
            format: float
            minimum: 0
            maximum: 20
          start:
            type: integer
            description: Integer value representing milliseconds since midnight.
            minimum: 0
            maximum: 86400000
            exclusiveMaximum: true
        required:
          - rate
          - start
    BloodGlucoseValue:
      oneOf:
        - format: float
          minimum: 0
          maximum: 1000
          description: Integer value representing a `mg/dL` value.
        - format: float
          minimum: 0
          maximum: 55
          description: Floating point value representing a `mmol/L` value.
      type: number
    Nutrition:
      type: object
      properties:
        absorptionDuration:
          type: integer
          format: int32
          minimum: 0
          maximum: 86400
          description: The duration it takes to fully digest/absorb the nutrients, in
            `seconds`
        carbohydrate:
          type: object
          properties:
            dietaryFiber:
              type: number
              format: float
              minimum: 0
              maximum: 1000
            net:
              type: number
              format: float
              minimum: 0
              maximum: 1000
            sugars:
              type: number
              format: float
              minimum: 0
              maximum: 1000
            total:
              type: number
              format: float
              minimum: 0
              maximum: 1000
            units:
              type: string
              enum:
                - grams
          required:
            - net
            - units
        energy:
          $ref: '#/components/schemas/Energy'
        fat:
          type: object
          properties:
            total:
              type: number
              format: float
              minimum: 0
              maximum: 1000
            units:
              type: string
              enum:
                - grams
          required:
            - total
            - units
        protein:
          type: object
          properties:
            total:
              type: number
              format: float
              minimum: 0
              maximum: 1000
            units:
              type: string
              enum:
                - grams
          required:
            - total
            - units
    Ingredient:
      type: object
      properties:
        amount:
          $ref: '#/components/schemas/Amount'
        brand:
          type: string
          minLength: 1
          maxLength: 100
        code:
          type: string
          minLength: 1
          maxLength: 100
        ingredients:
          $ref: '#/components/schemas/IngredientArray'
        name:
          type: string
          minLength: 1
          maxLength: 100
        nutrition:
          $ref: '#/components/schemas/Nutrition'
    IngredientArray:
      type: array
      minItems: 1
      maxItems: 100
      items:
        $ref: '#/components/schemas/Ingredient'
    Food:
      allOf:
        - $ref: '#/components/schemas/Base'
        - type: object
          properties:
            amount:
              $ref: '#/components/schemas/Amount'
            brand:
              type: string
              minLength: 1
              maxLength: 100
            code:
              type: string
              minLength: 1
              maxLength: 100
            ingredients:
              $ref: '#/components/schemas/IngredientArray'
            meal:
              type: string
              enum:
                - breakfast
                - lunch
                - dinner
                - snack
                - other
            mealOther:
              type: string
              minLength: 1
              maxLength: 100
            name:
              type: string
            nutrition:
              $ref: '#/components/schemas/Nutrition'
            type:
              type: string
              enum:
                - food
          required:
            - type
    Distance:
      oneOf:
        - properties:
            units:
              type: string
              enum:
                - feet
            value:
              type: number
              format: float
              minimum: 0
              maximum: 528000
          required:
            - units
            - value
        - properties:
            units:
              type: string
              enum:
                - kilometers
            value:
              type: number
              format: float
              minimum: 0
              maximum: 160.9344
          required:
            - units
            - value
        - properties:
            units:
              type: string
              enum:
                - meters
            value:
              type: number
              format: float
              minimum: 0
              maximum: 160934.4
          required:
            - units
            - value
        - properties:
            units:
              type: string
              enum:
                - miles
            value:
              type: number
              format: float
              minimum: 0
              maximum: 100
          required:
            - units
            - value
        - properties:
            units:
              type: string
              enum:
                - yards
            value:
              type: number
              format: float
              minimum: 0
              maximum: 176000
          required:
            - units
            - value
      type: object
    Energy:
      oneOf:
        - properties:
            units:
              type: string
              enum:
                - calories
            value:
              type: number
              format: float
              minimum: 0
              maximum: 10000000
          required:
            - units
            - value
        - properties:
            units:
              type: string
              enum:
                - joules
            value:
              type: number
              format: float
              minimum: 0
              maximum: 41858000
          required:
            - units
            - value
        - properties:
            units:
              type: string
              enum:
                - kilocalories
            value:
              type: number
              format: float
              minimum: 0
              maximum: 10000
          required:
            - units
            - value
        - properties:
            units:
              type: string
              enum:
                - kilojoules
            value:
              type: number
              format: float
              minimum: 0
              maximum: 41858
          required:
            - units
            - value
      type: object
    PhysicalActivity:
      allOf:
        - $ref: '#/components/schemas/Base'
        - type: object
          properties:
            activityType:
              type: string
            activityTypeOther:
              type: string
            aggregate:
              type: boolean
            distance:
              $ref: '#/components/schemas/Distance'
            duration:
              $ref: '#/components/schemas/PhysicalActivityDuration'
            elevationChange:
              oneOf:
                - properties:
                    units:
                      type: string
                      enum:
                        - feet
                    value:
                      type: number
                      format: float
                      minimum: 0
                      maximum: 52800
                      description: Maximum elevation change. Up to 10 miles in feet
                  required:
                    - units
                    - value
                - properties:
                    units:
                      type: string
                      enum:
                        - meters
                    value:
                      type: number
                      format: float
                      minimum: 0
                      maximum: 16093.44
                      description: Maximum elevation change. Up to 10 miles in meters
                  required:
                    - units
                    - value
              type: object
            energy:
              $ref: '#/components/schemas/Energy'
            flight:
              type: object
              properties:
                count:
                  type: integer
                  format: int32
                  minimum: 0
                  maximum: 10000
              required:
                - count
            lap:
              type: object
              properties:
                count:
                  type: integer
                  format: int32
                  minimum: 0
                  maximum: 10000
                distance:
                  $ref: '#/components/schemas/Distance'
              required:
                - count
                - distance
            name:
              type: string
            reportedIntensity:
              type: string
            step:
              type: object
              properties:
                count:
                  type: integer
                  format: int32
                  minimum: 0
                  maximum: 100000
              required:
                - count
            type:
              type: string
              enum:
                - physicalActivity
    ReportedState:
      allOf:
        - $ref: '#/components/schemas/Base'
        - type: object
          properties:
            states:
              type: array
              uniqueItems: true
              minItems: 1
              maxItems: 100
              items:
                type: object
                additionalProperties: false
                properties:
                  severity:
                    type: integer
                    format: int32
                    minimum: 0
                    maximum: 10
                  state:
                    type: string
                    enum:
                      - alcohol
                      - cycle
                      - hyperglycemiaSymptoms
                      - hypoglycemiaSymptoms
                      - illness
                      - other
                      - stress
                  stateOther:
                    type: string
                    minLength: 1
                    maxLength: 100
                    description: Should only be present if `state` is `other`
                required:
                  - state
            type:
              type: string
              enum:
                - reportedState
          required:
            - states
    PhysicalActivityDuration:
      oneOf:
        - properties:
            units:
              type: string
              enum:
                - hours
            value:
              type: number
              format: float
              minimum: 0
              maximum: 168
          required:
            - units
            - value
        - properties:
            units:
              type: string
              enum:
                - minutes
            value:
              type: number
              format: float
              minimum: 0
              maximum: 10080
          required:
            - units
            - value
        - properties:
            units:
              type: string
              enum:
                - seconds
            value:
              type: number
              format: float
              minimum: 0
              maximum: 604800
          required:
            - units
            - value
      type: object
    EventHistory:
      title: EventHistory [Proposed]
      type: array
      items:
        type: object
        properties:
          time:
            type: string
            format: date-time
          changes:
            $ref: ./common.oas2.yml#/definitions/JSONPatch
        required:
          - time
          - changes
    DeviceSettingsChange:
      allOf:
        - $ref: '#/components/schemas/DeviceEvent'
        - type: object
          properties:
            basalSchedule:
              type: object
              properties:
                from:
                  type: string
                to:
                  type: string
              required:
                - to
            bgTarget:
              type: object
              properties:
                from:
                  type: string
                to:
                  type: string
              required:
                - to
            carbRatio:
              type: object
              properties:
                from:
                  type: string
                to:
                  type: string
              required:
                - to
            insulinSensitivityFactor:
              type: object
              properties:
                from:
                  type: string
                to:
                  type: string
              required:
                - to
            subType:
              type: string
              enum:
                - settingsChange
          required:
            - subType
      title: DeviceSettingsChange [Proposed]
    DeviceSensorEvent:
      allOf:
        - $ref: '#/components/schemas/DeviceEvent'
        - type: object
          properties:
            subType:
              type: string
              enum:
                - sensorEvent
            eventType:
              type: string
              enum:
                - expired
                - start
                - stop
      title: DeviceSensorEvent [Proposed]
    DoubleNumber:
      type: number
      format: double
    CgmSettings:
      allOf:
        - $ref: '#/components/schemas/Base'
        - type: object
          properties:
            highAlerts:
              type: object
              required:
                - enabled
                - level
                - snooze
              properties:
                enabled:
                  type: boolean
                level:
                  $ref: '#/components/schemas/BloodGlucoseValue'
                snooze:
                  type: integer
                  minimum: 0
                  maximum: 86400000
                  description: Integer value representing milliseconds
            lowAlerts:
              type: object
              required:
                - enabled
                - level
                - snooze
              properties:
                enabled:
                  type: boolean
                level:
                  $ref: '#/components/schemas/BloodGlucoseValue'
                snooze:
                  type: integer
                  minimum: 0
                  maximum: 86400000
                  description: Integer value representing milliseconds
            manufacturers:
              type: array
              items:
                type: object
            model:
              type: string
            outOfRangeAlerts:
              type: object
              required:
                - enabled
                - snooze
              properties:
                enabled:
                  type: boolean
                snooze:
                  type: number
                  description: Integer value representing milliseconds
                  format: double
                  minimum: 0
                  maximum: 86400000
            rateOfChangeAlert:
              type: object
              required:
                - fallRate
                - riseRate
              properties:
                fallRate:
                  type: object
                  properties:
                    enabled:
                      type: boolean
                    rate:
                      oneOf:
                        - description: Integer value representing a `mg/dL` value.
                          format: double
                          minimum: -10
                          maximum: 0
                          exclusiveMaximum: true
                          multipleOf: 1
                        - description: Floating point value representing a `mmol/L` value.
                          format: double
                          minimum: -0.55
                          exclusiveMinimum: false
                          maximum: 0
                          exclusiveMaximum: true
                      type: number
                riseRate:
                  type: object
                  properties:
                    enabled:
                      type: boolean
                    rate:
                      oneOf:
                        - description: Integer value representing a `mg/dL` value.
                          format: double
                          minimum: 0
                          exclusiveMinimum: true
                          maximum: 10
                          multipleOf: 1
                        - description: Floating point value representing a `mmol/L` value.
                          format: double
                          minimum: 0
                          exclusiveMinimum: true
                          maximum: 0.55
                      type: number
            serialNumber:
              type: string
            transmitterId:
              type: string
            type:
              type: string
              enum:
                - cgmSettings
            units:
              type: string
              enum:
                - mg/dL
                - mmol/L
          required:
            - highAlerts
            - lowAlerts
            - outOfRangeAlerts
            - rateOfChangeAlert
            - transmitterId
            - type
            - units
    DeviceTransmitterEvent:
      allOf:
        - $ref: '#/components/schemas/DeviceEvent'
        - type: object
          properties:
            subType:
              type: string
              enum:
                - transmitterEvent
            eventType:
              type: string
              enum:
                - expired
                - start
                - stop
      title: DeviceTransmitterEvent [Proposed]
    Trend:
      type: object
      properties:
        Category:
          type: string
          description: Categories are annotated in terms of `slow`, `moderate` and `rapid`,
            since different manufacturers use different arrow glyphs.
          enum:
            - constant
            - moderateFall
            - moderateRise
            - rapidFall
            - rapidRise
            - slowFall
            - slowRise
        Rate:
          $ref: '#/components/schemas/Rate'
    Rate:
      type: object
      properties:
        Units:
          type: string
        Value:
          type: number
    Settings:
      type: object
      title: Settings
      description: Global Settings Object
      properties:
        loopAppVersion:
          type: string
          minLength: 1
          maxLength: 1000
        name:
          type: string
          minLength: 1
          maxLength: 1000
    DosingDecision:
      allOf:
        - $ref: '#/components/schemas/Base'
        - type: object
          properties:
            alerts:
              type: array
              items:
                type: string
            insulinOnBoard:
              type: object
              properties:
                startTime:
                  type: string
                  format: date-time
                amount:
                  type: number
                  minimum: 0
                  maximum: 1000
              required:
                - amount
            carbohydratesOnBoard:
              type: object
              properties:
                startTime:
                  type: string
                  format: date-time
                endTime:
                  type: string
                  format: date-time
                amount:
                  type: number
                  minimum: 0
                  maximum: 1000
              required:
                - startTime
                - endTime
                - amount
            bloodGlucoseTargetRangeSchedule:
              $ref: '#/components/schemas/BloodGlucoseTarget'
            bloodGlucoseForecast:
              type: array
              items:
                type: object
                properties:
                  time:
                    type: string
                    format: date-time
                  value:
                    type: number
                required:
                  - time
                  - value
            recommendedBasal:
              type: object
              properties:
                rate:
                  type: number
                  minimum: 0
                  maximum: 100
                duration:
                  type: number
                  minimum: 0
                  maximum: 604800000
              required:
                - rate
                - duration
            recommendedBolus:
              type: object
              properties:
                amount:
                  type: number
                  minimum: 0
                  maximum: 1000
              required:
                - amount
            units:
              type: object
              minProperties: 1
              properties:
                bloodGlucose:
                  type: string
                  enum:
                    - mmol/L
                    - mmol/l
                    - mg/dL
                    - mg/dl
                carbohydrate:
                  type: string
                  enum:
                    - exchanges
                    - grams
                insulin:
                  type: string
                  enum:
                    - Units
              required:
                - bloodGlucose
                - carbohydrate
                - insulin
    PumpStatus:
      allOf:
        - $ref: '#/components/schemas/Base'
        - type: object
          properties:
            basalDelivery:
              type: object
              properties:
                state:
                  type: string
                  enum:
                    - cancelingTemporary
                    - initiatingTemporary
                    - resuming
                    - scheduled
                    - suspended
                    - suspending
                    - temporary
                time:
                  type: string
                  format: date-time
                dose:
                  type: object
                  properties:
                    startTime:
                      type: string
                      format: date-time
                    endTime:
                      type: string
                      format: date-time
                    rate:
                      type: number
                      minimum: 0
                      maximum: 100
                    amountDelivered:
                      type: number
                      minimum: 0
                      maximum: 1000
                  required:
                    - rate
              required:
                - state
            battery:
              type: object
              properties:
                time:
                  type: string
                  format: date-time
                remaining:
                  type: number
                  minimum: 0
                  maximum: 100
                units:
                  type: string
                  enum:
                    - percent
              required:
                - remaining
                - units
            bolusDelivery:
              type: object
              properties:
                state:
                  type: string
                  enum:
                    - none
                    - initiating
                    - inProgress
                    - canceling
                does:
                  type: object
                  required:
                    - amount
                  properties:
                    startTime:
                      type: string
                      format: date-time
                    amount:
                      type: number
                      minimum: 0
                      maximum: 1000
                    amountDelivered:
                      type: number
                      minimum: 0
                      maximum: 1000
              required:
                - state
                - does
            device:
              type: object
              properties:
                id:
                  type: string
                  minLength: 1
                  maxLength: 1000
                name:
                  type: string
                  minLength: 1
                  maxLength: 1000
                manufacturer:
                  type: string
                  minLength: 1
                  maxLength: 1000
                model:
                  type: string
                  minLength: 1
                  maxLength: 1000
                firmwareVersion:
                  type: string
                  minLength: 1
                  maxLength: 1000
                hardwareVersion:
                  type: string
                  minLength: 1
                  maxLength: 1000
                softwareVersion:
                  type: string
                  minLength: 1
                  maxLength: 1000
            reservoir:
              type: object
              properties:
                time:
                  type: string
                  format: date-time
                remaining:
                  type: number
                  minimum: 0
                  maximum: 10000
                units:
                  type: string
                  enum:
                    - Units
              required:
                - remaining
                - units
    Glucose:
      $ref: '#/components/schemas/Blood'